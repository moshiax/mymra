name: Upload Python Package to PyPI

on:
  push:
    paths:
      - "setup.py"
  workflow_dispatch:

jobs:
  pypi-publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mymra
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get diff for setup.py
        id: diff
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            git diff HEAD^ HEAD setup.py > setup_diff.txt
            if grep -q 'version=' setup_diff.txt; then
              echo "Version change detected."
              echo "version_changed=true" >> $GITHUB_ENV
            else
              echo "No version change detected. Skipping publish."
              echo "version_changed=false" >> $GITHUB_ENV
            fi
          else
            echo "First commit or no previous commit found."
            echo "Skipping version check."
            echo "version_changed=true" >> $GITHUB_ENV
          fi
          
      - name: Stop if no version change
        if: env.version_changed == 'false'
        run: |
          echo "Workflow skipped as the version did not change."
          exit 0

      - name: Set up Python
        if: env.version_changed == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        if: env.version_changed == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install colorama pycryptodome

      - name: Build package
        if: env.version_changed == 'true'
        run: python setup.py sdist bdist_wheel

      - name: Install built package
        if: env.version_changed == 'true'
        run: pip install .

      - name: Run test script
        if: env.version_changed == 'true'
        run: |
          python tests/test.py
          if [ $? -eq 0 ]; then
            echo "Tests passed successfully."
          else
            echo "Tests failed!" >&2
            exit 1
          fi
        shell: bash

      - name: Publish package distributions to PyPI
        if: env.version_changed == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
